services:
    db:
        image: postgres:17.4-alpine
        container_name: api-db
        env_file:
            - .env
        environment:
            - PGPORT=5555
        volumes:
            - api_data:/var/lib/postgresql/data
        restart: always
        healthcheck:
            test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
            interval: 10s
            retries: 5
            start_period: 5s
        networks:
            - gharchive_network

    db-bootstrap:
        build:
            context: .
            dockerfile: Dockerfile.bootstrap      
        container_name: db-bootstrap
        env_file:
            - .env
        environment:
            - POSTGRES_HOST=db
        depends_on:
            db:
                condition: service_healthy
        networks:
            - gharchive_network

    web-server:
        build:
            context: .
            dockerfile: Dockerfile.web-server
        container_name: web-server
        env_file:
            - .env
        environment:
            - POSTGRES_HOST=db
        ports:
            - "8000:8000"
        volumes:
            - .:/app
        depends_on:
            db:
                condition: service_healthy
        networks:
            - gharchive_network

volumes:
    api_data:

networks:
  gharchive_network:
    external: true